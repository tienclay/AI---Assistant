// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.26.1
// source: discord.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "discord";

export interface MessageRequest {
  message: string;
}

export interface MessageResponse {
  response: string;
}

export const DISCORD_PACKAGE_NAME = "discord";

export interface DiscordServiceClient {
  sendMessage(request: MessageRequest): Observable<MessageResponse>;
}

export interface DiscordServiceController {
  sendMessage(request: MessageRequest): Promise<MessageResponse> | Observable<MessageResponse> | MessageResponse;
}

export function DiscordServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["sendMessage"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("DiscordService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("DiscordService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const DISCORD_SERVICE_NAME = "DiscordService";
